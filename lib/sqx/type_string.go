// Code generated by "stringer -type=Type"; DO NOT EDIT.

package sqx

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NOTSET-0]
	_ = x[ERROR-1]
	_ = x[EOF-2]
	_ = x[COMMENT-3]
	_ = x[CREATE-4]
	_ = x[SHOW-5]
	_ = x[DROP-6]
	_ = x[ALTER-7]
	_ = x[TABLE-8]
	_ = x[DATABASE-9]
	_ = x[NOT-10]
	_ = x[EXISTS-11]
	_ = x[CONSTRAINT-12]
	_ = x[INTEGER-13]
	_ = x[DECIMAL-14]
	_ = x[CHAR-15]
	_ = x[VARCHAR-16]
	_ = x[TEXT-17]
	_ = x[MEDIUMTEXT-18]
	_ = x[BOOL-19]
	_ = x[BLOB-20]
	_ = x[MEDIUMBLOB-21]
	_ = x[DATETIME-22]
	_ = x[DEFAULT-23]
	_ = x[UNSIGNED-24]
	_ = x[SELECT-25]
	_ = x[DISTINCT-26]
	_ = x[INSERT-27]
	_ = x[INTO-28]
	_ = x[VALUES-29]
	_ = x[UPDATE-30]
	_ = x[SET-31]
	_ = x[DELETE-32]
	_ = x[FROM-33]
	_ = x[WHERE-34]
	_ = x[GROUP-35]
	_ = x[HAVING-36]
	_ = x[JOIN-37]
	_ = x[LEFT-38]
	_ = x[RIGHT-39]
	_ = x[INNER-40]
	_ = x[OUTER-41]
	_ = x[CROSS-42]
	_ = x[ON-43]
	_ = x[AS-44]
	_ = x[IN-45]
	_ = x[NOTIN-46]
	_ = x[BETWEEN-47]
	_ = x[LIKE-48]
	_ = x[IS-49]
	_ = x[ISNOT-50]
	_ = x[NOTLIKE-51]
	_ = x[ORDER-52]
	_ = x[BY-53]
	_ = x[ASC-54]
	_ = x[DESC-55]
	_ = x[RANDOM-56]
	_ = x[LIMIT-57]
	_ = x[UNION-58]
	_ = x[AND-59]
	_ = x[OR-60]
	_ = x[NULL-61]
	_ = x[TRUE-62]
	_ = x[FALSE-63]
	_ = x[FOR-64]
	_ = x[IDENT-65]
	_ = x[INT-66]
	_ = x[FLOAT-67]
	_ = x[STRING-68]
	_ = x[ADD-69]
	_ = x[SUB-70]
	_ = x[MUL-71]
	_ = x[DIV-72]
	_ = x[MOD-73]
	_ = x[LSF-74]
	_ = x[RSF-75]
	_ = x[ANB-76]
	_ = x[EQL-77]
	_ = x[LSS-78]
	_ = x[GTR-79]
	_ = x[NT-80]
	_ = x[NEQ-81]
	_ = x[LEQ-82]
	_ = x[GEQ-83]
	_ = x[LPAREN-84]
	_ = x[LBRACK-85]
	_ = x[LBRACE-86]
	_ = x[COMMA-87]
	_ = x[PERIOD-88]
	_ = x[RPAREN-89]
	_ = x[COLON-90]
	_ = x[SEMICOLON-91]
	_ = x[QUESTION-92]
}

const _Type_name = "NOTSETERROREOFCOMMENTCREATESHOWDROPALTERTABLEDATABASENOTEXISTSCONSTRAINTINTEGERDECIMALCHARVARCHARTEXTMEDIUMTEXTBOOLBLOBMEDIUMBLOBDATETIMEDEFAULTUNSIGNEDSELECTDISTINCTINSERTINTOVALUESUPDATESETDELETEFROMWHEREGROUPHAVINGJOINLEFTRIGHTINNEROUTERCROSSONASINNOTINBETWEENLIKEISISNOTNOTLIKEORDERBYASCDESCRANDOMLIMITUNIONANDORNULLTRUEFALSEFORIDENTINTFLOATSTRINGADDSUBMULDIVMODLSFRSFANBEQLLSSGTRNTNEQLEQGEQLPARENLBRACKLBRACECOMMAPERIODRPARENCOLONSEMICOLONQUESTION"

var _Type_index = [...]uint16{0, 6, 11, 14, 21, 27, 31, 35, 40, 45, 53, 56, 62, 72, 79, 86, 90, 97, 101, 111, 115, 119, 129, 137, 144, 152, 158, 166, 172, 176, 182, 188, 191, 197, 201, 206, 211, 217, 221, 225, 230, 235, 240, 245, 247, 249, 251, 256, 263, 267, 269, 274, 281, 286, 288, 291, 295, 301, 306, 311, 314, 316, 320, 324, 329, 332, 337, 340, 345, 351, 354, 357, 360, 363, 366, 369, 372, 375, 378, 381, 384, 386, 389, 392, 395, 401, 407, 413, 418, 424, 430, 435, 444, 452}

func (i Type) String() string {
	if i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
